{
  "__schema": {
    "queryType": {
      "name": "Query"
    },
    "mutationType": {
      "name": "Mutation"
    },
    "subscriptionType": null,
    "types": [
      {
        "kind": "OBJECT",
        "name": "ActiveJwk",
        "description": null,
        "fields": [
          {
            "name": "iss",
            "description": "The string (Issuing Authority) that identifies the OIDC provider.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "kid",
            "description": "The string (Key ID) that identifies the JWK among a set of JWKs, (RFC 7517, Section 4.5).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "kty",
            "description": "The JWK key type parameter, (RFC 7517, Section 4.1).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "e",
            "description": "The JWK RSA public exponent, (RFC 7517, Section 9.3).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "n",
            "description": "The JWK RSA modulus, (RFC 7517, Section 9.3).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alg",
            "description": "The JWK algorithm parameter, (RFC 7517, Section 4.4).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "epoch",
            "description": "The most recent epoch in which the JWK was validated.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ActiveJwkConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ActiveJwkEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ActiveJwk",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ActiveJwkEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ActiveJwk",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Address",
        "description": "The 32-byte address that is an account address (corresponding to a public key).",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this address, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this address. If type is not supplied,\nit defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this address.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this address.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this address. These grant the owner the capability to\nmanage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transactionBlocks",
            "description": "Similar behavior to the `transactionBlocks` in Query but supporting the additional\n`AddressTransactionBlockRelationship` filter, which defaults to `SENT`.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "relation",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "AddressTransactionBlockRelationship",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AddressConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AddressEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Address",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AddressEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AddressOwner",
        "description": "An address-owned object is owned by a specific 32-byte address that is\neither an account address (derived from a particular signature scheme) or\nan object ID. An address-owned object is accessible only to its owner and no others.",
        "fields": [
          {
            "name": "owner",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Owner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AddressTransactionBlockRelationship",
        "description": "The possible relationship types for a transaction block: sent, or received.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SIGN",
            "description": "Transactions this address has sent. NOTE: this input filter has been deprecated in favor of\n`SENT` which behaves identically but is named more clearly. Both filters restrict\ntransactions by their sender, only, not signers in general.\n\nThis filter will be removed with 1.36.0 (2024-10-14).",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SENT",
            "description": "Transactions this address has sent.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "RECV",
            "description": "Transactions that sent objects to this address. NOTE: this input filter has been deprecated\nin favor of `AFFECTED`, which offers an easier to understand behavior.\n\nThis filter will be removed with 1.36.0 (2024-10-14), or at least one release after\n`AFFECTED` is introduced, whichever is later.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "AFFECTED",
            "description": "Transactions that this address was involved in, either as the sender, sponsor, or as the\nowner of some object that was created, modified or transfered.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AuthenticatorStateCreateTransaction",
        "description": "System transaction for creating the on-chain state used by zkLogin.",
        "fields": [
          {
            "name": "_",
            "description": "A workaround to define an empty variant of a GraphQL union.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AuthenticatorStateExpireTransaction",
        "description": null,
        "fields": [
          {
            "name": "minEpoch",
            "description": "Expire JWKs that have a lower epoch than this.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authenticatorObjInitialSharedVersion",
            "description": "The initial version that the AuthenticatorStateUpdate was shared at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AuthenticatorStateUpdateTransaction",
        "description": "System transaction for updating the on-chain state used by zkLogin.",
        "fields": [
          {
            "name": "epoch",
            "description": "Epoch of the authenticator state update transaction.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "round",
            "description": "Consensus round of the authenticator state update.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "newActiveJwks",
            "description": "Newly active JWKs (JSON Web Keys).",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ActiveJwkConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authenticatorObjInitialSharedVersion",
            "description": "The initial version of the authenticator object that it was shared at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AvailableRange",
        "description": "Range of checkpoints that the RPC is guaranteed to produce a consistent response for.",
        "fields": [
          {
            "name": "first",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Checkpoint",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "last",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Checkpoint",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Balance",
        "description": "The total balance for a particular coin type.",
        "fields": [
          {
            "name": "coinType",
            "description": "Coin type for the balance, such as 0x2::sui::SUI",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coinObjectCount",
            "description": "How many coins of this type constitute the balance",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalBalance",
            "description": "Total balance across all coin objects of the coin type",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BalanceChange",
        "description": "Effects to the balance (sum of coin values per coin type) owned by an address or object.",
        "fields": [
          {
            "name": "owner",
            "description": "The address or object whose balance has changed.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Owner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coinType",
            "description": "The inner type of the coin whose balance has changed (e.g. `0x2::sui::SUI`).",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "amount",
            "description": "The signed balance change.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BalanceChangeConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "BalanceChangeEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "BalanceChange",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BalanceChangeEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceChange",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BalanceConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "BalanceEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Balance",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BalanceEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Balance",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Base64",
        "description": "String containing Base64-encoded binary data.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "BigInt",
        "description": "String representation of an arbitrary width, possibly signed integer.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BridgeCommitteeInitTransaction",
        "description": null,
        "fields": [
          {
            "name": "bridgeObjInitialSharedVersion",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BridgeStateCreateTransaction",
        "description": null,
        "fields": [
          {
            "name": "chainId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ChangeEpochTransaction",
        "description": "A system transaction that updates epoch information on-chain (increments the current epoch).\nExecuted by the system once per epoch, without using gas. Epoch change transactions cannot be\nsubmitted by users, because validators will refuse to sign them.\n\nThis transaction kind is deprecated in favour of `EndOfEpochTransaction`.",
        "fields": [
          {
            "name": "epoch",
            "description": "The next (to become) epoch.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "protocolVersion",
            "description": "The protocol version in effect in the new epoch.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageCharge",
            "description": "The total amount of gas charged for storage during the previous epoch (in MIST).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "computationCharge",
            "description": "The total amount of gas charged for computation during the previous epoch (in MIST).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The SUI returned to transaction senders for cleaning up objects (in MIST).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nonRefundableStorageFee",
            "description": "The total gas retained from storage fees, that will not be returned by storage rebates when\nthe relevant objects are cleaned up (in MIST).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startTimestamp",
            "description": "Time at which the next epoch will start.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "systemPackages",
            "description": "System packages (specifically framework and move stdlib) that are written before the new\nepoch starts, to upgrade them on-chain. Validators write these packages out when running the\ntransaction.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MovePackageConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Checkpoint",
        "description": "Checkpoints contain finalized transactions and are used for node synchronization\nand global transaction ordering.",
        "fields": [
          {
            "name": "digest",
            "description": "A 32-byte hash that uniquely identifies the checkpoint contents, encoded in Base58. This\nhash can be used to verify checkpoint contents by checking signatures against the committee,\nHashing contents to match digest, and checking that the previous checkpoint digest matches.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sequenceNumber",
            "description": "This checkpoint's position in the total order of finalized checkpoints, agreed upon by\nconsensus.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timestamp",
            "description": "The timestamp at which the checkpoint is agreed to have happened according to consensus.\nTransactions that access time in this checkpoint will observe this timestamp.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validatorSignatures",
            "description": "This is an aggregation of signatures from a quorum of validators for the checkpoint\nproposal.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousCheckpointDigest",
            "description": "The digest of the checkpoint at the previous sequence number.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "networkTotalTransactions",
            "description": "The total number of transaction blocks in the network by the end of this checkpoint.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rollingGasSummary",
            "description": "The computation cost, storage cost, storage rebate, and non-refundable storage fee\naccumulated during this epoch, up to and including this checkpoint. These values increase\nmonotonically across checkpoints in the same epoch, and reset on epoch boundaries.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "GasCostSummary",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "epoch",
            "description": "The epoch this checkpoint is part of.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transactionBlocks",
            "description": "Transactions in this checkpoint.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range consists of all transactions in this checkpoint.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CheckpointConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CheckpointEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Checkpoint",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CheckpointEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Checkpoint",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CheckpointId",
        "description": "Filter either by the digest, or the sequence number, or neither, to get the latest checkpoint.",
        "fields": null,
        "inputFields": [
          {
            "name": "digest",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "sequenceNumber",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Coin",
        "description": "Some 0x2::coin::Coin Move object.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object. If type is not supplied,\nit defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object. These grant the owner the capability to\nmanage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are:\nNOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or\nsystem package upgrade transaction. LIVE, the version returned is the most recent for the\nobject, and it is not deleted or wrapped at that version. HISTORICAL, the object was\nreferenced at a specific version or checkpoint, so is fetched from historical tables and may\nnot be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or\nwrapped and only partial information can be loaded.\"",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that created this version of the object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The amount of SUI we would rebate if this object gets deleted or mutated. This number is\nrecalculated based on the present storage gas price.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this object.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the object's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "contents",
            "description": "Displays the contents of the Move object in a JSON string and through GraphQL types. Also\nprovides the flat representation of the type signature, and the BCS of the corresponding\ndata.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPublicTransfer",
            "description": "Determines whether a transaction can transfer this object, using the TransferObjects\ntransaction command or `sui::transfer::public_transfer`, both of which require the object to\nhave the `key` and `store` abilities.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "display",
            "description": "The set of named templates defined on-chain for the type of this object, to be handled\noff-chain. The server substitutes data from the object into these templates to generate a\ndisplay string per template.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DisplayEntry",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose\ntype have `copy`, `drop`, and `store`, and are specified using their type, and their BCS\ncontents, Base64 encoded.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values\nwhose type have `copy`, `drop`, and `store`, and are specified using their type, and their\nBCS contents, Base64 encoded. The value of a dynamic object field can also be accessed\noff-chain directly via its address (e.g. using `Query.object`).\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coinBalance",
            "description": "Balance of this coin object.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CoinConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CoinEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Coin",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CoinDenyListStateCreateTransaction",
        "description": null,
        "fields": [
          {
            "name": "_",
            "description": "A workaround to define an empty variant of a GraphQL union.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CoinEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Coin",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CoinMetadata",
        "description": "The metadata for a coin type.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object. If type is not supplied,\nit defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object. These grant the owner the capability to\nmanage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are:\nNOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or\nsystem package upgrade transaction. LIVE, the version returned is the most recent for the\nobject, and it is not deleted or wrapped at that version. HISTORICAL, the object was\nreferenced at a specific version or checkpoint, so is fetched from historical tables and may\nnot be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or\nwrapped and only partial information can be loaded.\"",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that created this version of the object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The amount of SUI we would rebate if this object gets deleted or mutated. This number is\nrecalculated based on the present storage gas price.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this object.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the object's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "contents",
            "description": "Displays the contents of the Move object in a JSON string and through GraphQL types. Also\nprovides the flat representation of the type signature, and the BCS of the corresponding\ndata.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPublicTransfer",
            "description": "Determines whether a transaction can transfer this object, using the TransferObjects\ntransaction command or `sui::transfer::public_transfer`, both of which require the object to\nhave the `key` and `store` abilities.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "display",
            "description": "The set of named templates defined on-chain for the type of this object, to be handled\noff-chain. The server substitutes data from the object into these templates to generate a\ndisplay string per template.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DisplayEntry",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose\ntype have `copy`, `drop`, and `store`, and are specified using their type, and their BCS\ncontents, Base64 encoded.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values\nwhose type have `copy`, `drop`, and `store`, and are specified using their type, and their\nBCS contents, Base64 encoded. The value of a dynamic object field can also be accessed\noff-chain directly via its address (e.g. using `Query.object`).\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "decimals",
            "description": "The number of decimal places used to represent the token.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Full, official name of the token.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "symbol",
            "description": "The token's identifying abbreviation.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": "Optional description of the token, provided by the creator of the token.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "iconUrl",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "supply",
            "description": "The overall quantity of tokens that will be issued.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ConsensusCommitPrologueTransaction",
        "description": "System transaction that runs at the beginning of a checkpoint, and is responsible for setting\nthe current value of the clock, based on the timestamp from consensus.",
        "fields": [
          {
            "name": "epoch",
            "description": "Epoch of the commit prologue transaction.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "round",
            "description": "Consensus round of the commit.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "commitTimestamp",
            "description": "Unix timestamp from consensus.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "consensusCommitDigest",
            "description": "Digest of consensus output, encoded as a Base58 string (only available from V2 of the\ntransaction).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "DateTime",
        "description": "ISO-8601 Date and Time: RFC3339 in UTC with format: YYYY-MM-DDTHH:MM:SS.mmmZ. Note that the milliseconds part is optional, and it may be omitted if its value is 0.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DependencyConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "DependencyEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TransactionBlock",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DependencyEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DisplayEntry",
        "description": "The set of named templates defined on-chain for the type of this object,\nto be handled off-chain. The server substitutes data from the object\ninto these templates to generate a display string per template.",
        "fields": [
          {
            "name": "key",
            "description": "The identifier for a particular template string of the Display object.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "value",
            "description": "The template string for the key with placeholder values substituted.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "error",
            "description": "An error string describing why the template could not be rendered.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "DomainFormat",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "AT",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "DOT",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DryRunEffect",
        "description": null,
        "fields": [
          {
            "name": "mutatedReferences",
            "description": "Changes made to arguments that were mutably borrowed by each command in this transaction.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DryRunMutation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "returnValues",
            "description": "Return results of each command in this transaction.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DryRunReturn",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DryRunMutation",
        "description": null,
        "fields": [
          {
            "name": "input",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "TransactionArgument",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DryRunResult",
        "description": null,
        "fields": [
          {
            "name": "error",
            "description": "The error that occurred during dry run execution, if any.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "results",
            "description": "The intermediate results for each command of the dry run execution, including\ncontents of mutated references and return values.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DryRunEffect",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transaction",
            "description": "The transaction block representing the dry run execution.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DryRunReturn",
        "description": null,
        "fields": [
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DynamicField",
        "description": "Dynamic fields are heterogeneous fields that can be added or removed at runtime,\nand can have arbitrary user-assigned names. There are two sub-types of dynamic\nfields:\n\n1) Dynamic Fields can store any value that has the `store` ability, however an object\nstored in this kind of field will be considered wrapped and will not be accessible\ndirectly via its ID by external tools (explorers, wallets, etc) accessing storage.\n2) Dynamic Object Fields values must be Sui objects (have the `key` and `store`\nabilities, and id: UID as the first field), but will still be directly accessible off-chain\nvia their object ID after being attached.",
        "fields": [
          {
            "name": "name",
            "description": "The string type, data, and serialized value of the DynamicField's 'name' field.\nThis field is used to uniquely identify a child of the parent object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "value",
            "description": "The returned dynamic field is an object if its return type is `MoveObject`,\nin which case it is also accessible off-chain via its address. Its contents\nwill be from the latest version that is at most equal to its parent object's\nversion",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "DynamicFieldValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DynamicFieldConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "DynamicFieldEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "DynamicField",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DynamicFieldEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicField",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DynamicFieldName",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "type",
            "description": "The string type of the DynamicField's 'name' field.\nA string representation of a Move primitive like 'u64', or a struct type like '0x2::kiosk::Listing'",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "bcs",
            "description": "The Base64 encoded bcs serialization of the DynamicField's 'name' field.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "DynamicFieldValue",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "MoveObject",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MoveValue",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "EndOfEpochTransaction",
        "description": "System transaction that supersedes `ChangeEpochTransaction` as the new way to run transactions\nat the end of an epoch. Behaves similarly to `ChangeEpochTransaction` but can accommodate other\noptional transactions to run at the end of the epoch.",
        "fields": [
          {
            "name": "transactions",
            "description": "The list of system transactions that are allowed to run at the end of the epoch.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "EndOfEpochTransactionKindConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "EndOfEpochTransactionKind",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "ChangeEpochTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "AuthenticatorStateCreateTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "AuthenticatorStateExpireTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "RandomnessStateCreateTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "CoinDenyListStateCreateTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BridgeStateCreateTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BridgeCommitteeInitTransaction",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "EndOfEpochTransactionKindConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EndOfEpochTransactionKindEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "EndOfEpochTransactionKind",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "EndOfEpochTransactionKindEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "EndOfEpochTransactionKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Epoch",
        "description": "Operation of the Sui network is temporally partitioned into non-overlapping epochs,\nand the network aims to keep epochs roughly the same duration as each other.\nDuring a particular epoch the following data is fixed:\n\n- the protocol version\n- the reference gas price\n- the set of participating validators",
        "fields": [
          {
            "name": "epochId",
            "description": "The epoch's id as a sequence number that starts at 0 and is incremented by one at every epoch change.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "referenceGasPrice",
            "description": "The minimum gas price that a quorum of validators are guaranteed to sign a transaction for.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validatorSet",
            "description": "Validator related properties, including the active validators.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ValidatorSet",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startTimestamp",
            "description": "The epoch's starting timestamp.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endTimestamp",
            "description": "The epoch's ending timestamp.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCheckpoints",
            "description": "The total number of checkpoints in this epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalTransactions",
            "description": "The total number of transaction blocks in this epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalGasFees",
            "description": "The total amount of gas fees (in MIST) that were paid in this epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalStakeRewards",
            "description": "The total MIST rewarded as stake.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalStakeSubsidies",
            "description": "The amount added to total gas fees to make up the total stake rewards.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fundSize",
            "description": "The storage fund available in this epoch.\nThis fund is used to redistribute storage fees from past transactions\nto future validators.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "netInflow",
            "description": "The difference between the fund inflow and outflow, representing\nthe net amount of storage fees accumulated in this epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fundInflow",
            "description": "The storage fees paid for transactions executed during the epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fundOutflow",
            "description": "The storage fee rebates paid to users who deleted the data associated with past\ntransactions.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "protocolConfigs",
            "description": "The epoch's corresponding protocol configuration, including the feature flags and the\nconfiguration options.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ProtocolConfigs",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageFund",
            "description": "SUI set aside to account for objects stored on-chain, at the start of the epoch.\nThis is also used for storage rebates.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "StorageFund",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "safeMode",
            "description": "Information about whether this epoch was started in safe mode, which happens if the full epoch\nchange logic fails for some reason.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "SafeMode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "systemStateVersion",
            "description": "The value of the `version` field of `0x5`, the `0x3::sui::SuiSystemState` object.  This\nversion changes whenever the fields contained in the system state object (held in a dynamic\nfield attached to `0x5`) change.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "systemParameters",
            "description": "Details of the system that are decided during genesis.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "SystemParameters",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "systemStakeSubsidy",
            "description": "Parameters related to the subsidy that supplements staking rewards",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "StakeSubsidy",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "liveObjectSetDigest",
            "description": "A commitment by the committee at the end of epoch on the contents of the live object set at\nthat time. This can be used to verify state snapshots.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "checkpoints",
            "description": "The epoch's corresponding checkpoints.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CheckpointConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transactionBlocks",
            "description": "The epoch's corresponding transaction blocks.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range consists of all transactions in this epoch.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Event",
        "description": null,
        "fields": [
          {
            "name": "sendingModule",
            "description": "The Move module containing some function that when called by\na programmable transaction block (PTB) emitted this event.\nFor example, if a PTB invokes A::m1::foo, which internally\ncalls A::m2::emit_event to emit an event,\nthe sending module would be A::m1.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveModule",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sender",
            "description": "Address of the sender of the event",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Address",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timestamp",
            "description": "UTC timestamp in milliseconds since epoch (1/1/1970)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": "The value's Move type.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The BCS representation of this value, Base64 encoded.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "data",
            "description": "Structured contents of a Move value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "MoveData",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "json",
            "description": "Representation of a Move value in JSON, where:\n\n- Addresses, IDs, and UIDs are represented in canonical form, as JSON strings.\n- Bools are represented by JSON boolean literals.\n- u8, u16, and u32 are represented as JSON numbers.\n- u64, u128, and u256 are represented as JSON strings.\n- Vectors are represented by JSON arrays.\n- Structs are represented by JSON objects.\n- Empty optional values are represented by `null`.\n\nThis form is offered as a less verbose convenience in cases where the layout of the type is\nknown by the client.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "EventConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EventEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Event",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "EventEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Event",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "EventFilter",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "sender",
            "description": "Filter down to events from transactions sent by this address.",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "transactionDigest",
            "description": "Filter down to the events from this transaction (given by its transaction digest).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emittingModule",
            "description": "Events emitted by a particular module. An event is emitted by a\nparticular module if some function in the module is called by a\nPTB and emits an event.\n\nModules can be filtered by their package, or package::module.\nWe currently do not support filtering by emitting module and event type\nat the same time so if both are provided in one filter, the query will error.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "eventType",
            "description": "This field is used to specify the type of event emitted.\n\nEvents can be filtered by their type's package, package::module,\nor their fully qualified type name.\n\nGeneric types can be queried by either the generic type name, e.g.\n`0x2::coin::Coin`, or by the full type name, such as\n`0x2::coin::Coin<0x2::sui::SUI>`.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ExecutionResult",
        "description": "The result of an execution, including errors that occurred during said execution.",
        "fields": [
          {
            "name": "errors",
            "description": "The errors field captures any errors that occurred during execution",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "effects",
            "description": "The effects of the executed transaction. Since the transaction was just executed\nand not indexed yet, fields including `balance_changes`, `timestamp` and `checkpoint`\nare not available.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockEffects",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ExecutionStatus",
        "description": "The execution status of this transaction block: success or failure.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SUCCESS",
            "description": "The transaction block was successfully executed",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FAILURE",
            "description": "The transaction block could not be executed",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Feature",
        "description": "Groups of features served by the RPC service.  The GraphQL Service can be configured to enable\nor disable these features.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "ANALYTICS",
            "description": "Statistics about how the network was running (TPS, top packages, APY, etc)",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "COINS",
            "description": "Coin metadata, per-address coin and balance information.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "DYNAMIC_FIELDS",
            "description": "Querying an object's dynamic fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NAME_SERVICE",
            "description": "SuiNS name and reverse name look-up.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBSCRIPTIONS",
            "description": "Transaction and Event subscriptions.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SYSTEM_STATE",
            "description": "Aspects that affect the running of the system that are managed by the\nvalidators either directly, or through system transactions.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MOVE_REGISTRY",
            "description": "Named packages service (utilizing dotmove package registry).",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Float",
        "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "GasCoin",
        "description": "Access to the gas inputs, after they have been smashed into one coin. The gas coin can only be\nused by reference, except for with `TransferObjectsTransaction` that can accept it by value.",
        "fields": [
          {
            "name": "_",
            "description": "A workaround to define an empty variant of a GraphQL union.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "GasCostSummary",
        "description": "Breakdown of gas costs in effects.",
        "fields": [
          {
            "name": "computationCost",
            "description": "Gas paid for executing this transaction (in MIST).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageCost",
            "description": "Gas paid for the data stored on-chain by this transaction (in MIST).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "Part of storage cost that can be reclaimed by cleaning up data created by this transaction\n(when objects are deleted or an object is modified, which is treated as a deletion followed\nby a creation) (in MIST).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nonRefundableStorageFee",
            "description": "Part of storage cost that is not reclaimed when data created by this transaction is cleaned\nup (in MIST).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "GasEffects",
        "description": "Effects related to gas (costs incurred and the identity of the smashed gas object returned).",
        "fields": [
          {
            "name": "gasObject",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasSummary",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "GasCostSummary",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "GasInput",
        "description": "Configuration for this transaction's gas price and the coins used to pay for gas.",
        "fields": [
          {
            "name": "gasSponsor",
            "description": "Address of the owner of the gas object(s) used",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Address",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasPayment",
            "description": "Objects used to pay for a transaction's execution and storage",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasPrice",
            "description": "An unsigned integer specifying the number of native tokens per gas unit this transaction\nwill pay (in MIST).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasBudget",
            "description": "The maximum number of gas units that can be expended by executing this transaction",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "GenesisTransaction",
        "description": "System transaction that initializes the network and writes the initial set of objects on-chain.",
        "fields": [
          {
            "name": "objects",
            "description": "Objects to be created during genesis.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "ID",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "IMoveDatatype",
        "description": "Interface implemented by all GraphQL types that represent a Move datatype (either structs or\nenums). This interface is used to provide a way to access fields that are shared by both\nstructs and enums, e.g., the module that the datatype belongs to, the name of the datatype,\ntype parameters etc.",
        "fields": [
          {
            "name": "module",
            "description": "The module that the datatype belongs to.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveModule",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "The name of the datatype.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "abilities",
            "description": "The abilities of the datatype.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "MoveAbility",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeParameters",
            "description": "The type parameters of the datatype.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveStructTypeParameter",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "MoveDatatype",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MoveStruct",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MoveEnum",
            "ofType": null
          }
        ]
      },
      {
        "kind": "INTERFACE",
        "name": "IMoveObject",
        "description": "This interface is implemented by types that represent a Move object on-chain (A Move value whose\ntype has `key`).",
        "fields": [
          {
            "name": "contents",
            "description": "Displays the contents of the Move object in a JSON string and through GraphQL types. Also provides the flat representation of the type signature, and the BCS of the corresponding data.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPublicTransfer",
            "description": "Determines whether a transaction can transfer this object, using the TransferObjects transaction command or `sui::transfer::public_transfer`, both of which require the object to have the `key` and `store` abilities.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "display",
            "description": "The set of named templates defined on-chain for the type of this object, to be handled off-chain. The server substitutes data from the object into these templates to generate a display string per template.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DisplayEntry",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose type have `copy`, `drop`, and `store`, and are specified using their type, and their BCS contents, Base64 encoded.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Ownertype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values whose type have `copy`, `drop`, and `store`, and are specified using their type, and their BCS contents, Base64 encoded. The value of a dynamic object field can also be accessed off-chain directly via its address (e.g. using `Query.object`).\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner type.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner type.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "MoveObject",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Coin",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "CoinMetadata",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "StakedSui",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SuinsRegistration",
            "ofType": null
          }
        ]
      },
      {
        "kind": "INTERFACE",
        "name": "IObject",
        "description": "Interface implemented by on-chain values that are addressable by an ID (also referred to as its\naddress). This includes Move objects and packages.",
        "fields": [
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are: NOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or system package upgrade transaction. LIVE, the version returned is the most recent for the object, and it is not deleted or wrapped at that version. HISTORICAL, the object was referenced at a specific version or checkpoint, so is fetched from historical tables and may not be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or wrapped and only partial information can be loaded.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's current contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address\nImmutable and Shared Objects do not have owners.",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that created this version of the object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the object's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Object",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MovePackage",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MoveObject",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Coin",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "CoinMetadata",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "StakedSui",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SuinsRegistration",
            "ofType": null
          }
        ]
      },
      {
        "kind": "INTERFACE",
        "name": "IOwner",
        "description": "Interface implemented by GraphQL types representing entities that can own objects. Object owners\nare identified by an address which can represent either the public key of an account or another\nobject. The same address can only refer to an account or an object, never both, but it is not\npossible to know which up-front.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object or address, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object or address. If type is not supplied, it defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object or address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object or address.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object or address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object or address.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object or address. These grant the owner the capability to manage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Owner",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Address",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Object",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MovePackage",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MoveObject",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Coin",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "CoinMetadata",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "StakedSui",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SuinsRegistration",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "Immutable",
        "description": "An immutable object is an object that can't be mutated, transferred, or deleted.\nImmutable objects have no owner, so anyone can use them.",
        "fields": [
          {
            "name": "_",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Input",
        "description": "One of the input objects or primitive values to the programmable transaction block.",
        "fields": [
          {
            "name": "ix",
            "description": "Index of the programmable transaction block input (0-indexed).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Int",
        "description": "The `Int` scalar type represents non-fractional whole numeric values.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "JSON",
        "description": "Arbitrary JSON data.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Linkage",
        "description": "Information used by a package to link to a specific version of its dependency.",
        "fields": [
          {
            "name": "originalId",
            "description": "The ID on-chain of the first version of the dependency.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "upgradedId",
            "description": "The ID on-chain of the version of the dependency that this package depends on.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": "The version of the dependency that this package depends on.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MakeMoveVecTransaction",
        "description": "Create a vector (possibly empty).",
        "fields": [
          {
            "name": "type",
            "description": "If the elements are not objects, or the vector is empty, a type must be supplied.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elements",
            "description": "The values to pack into the vector, all of the same type.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "TransactionArgument",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MergeCoinsTransaction",
        "description": "Merges `coins` into the first `coin` (produces no results).",
        "fields": [
          {
            "name": "coin",
            "description": "The coin to merge into.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "TransactionArgument",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coins to be merged.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "TransactionArgument",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "MoveAbility",
        "description": "Abilities are keywords in Sui Move that define how types behave at the compiler level.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "COPY",
            "description": "Enables values to be copied.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "DROP",
            "description": "Enables values to be popped/dropped.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "KEY",
            "description": "Enables values to be held directly in global storage.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "STORE",
            "description": "Enables values to be held inside a struct in global storage.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveCallTransaction",
        "description": "A call to either an entry or a public Move function.",
        "fields": [
          {
            "name": "package",
            "description": "The storage ID of the package the function being called is defined in.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "module",
            "description": "The name of the module the function being called is defined in.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "functionName",
            "description": "The name of the function being called.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "function",
            "description": "The function being called, resolved.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveFunction",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeArguments",
            "description": "The actual type parameters passed in for this move call.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveType",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "arguments",
            "description": "The actual function parameters passed in for this move call.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "TransactionArgument",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "MoveData",
        "description": "The contents of a Move Value, corresponding to the following recursive type:\n\ntype MoveData =\n    { Address: SuiAddress }\n  | { UID:     SuiAddress }\n  | { ID:      SuiAddress }\n  | { Bool:    bool }\n  | { Number:  BigInt }\n  | { String:  string }\n  | { Vector:  [MoveData] }\n  | { Option:   MoveData? }\n  | { Struct:  [{ name: string , value: MoveData }] }\n  | { Variant: {\n      name: string,\n      fields: [{ name: string, value: MoveData }],\n  }",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveDatatype",
        "description": "The generic representation of a Move datatype (either a struct or an enum) which exposes common\nfields and information (module, name, abilities, type parameters etc.) that is shared across\nthem.",
        "fields": [
          {
            "name": "module",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveModule",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "abilities",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "MoveAbility",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeParameters",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveStructTypeParameter",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asMoveEnum",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveEnum",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asMoveStruct",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveStruct",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveDatatype",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveDatatypeConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveDatatypeEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveDatatype",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveDatatypeEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveDatatype",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveEnum",
        "description": "Description of an enum type, defined in a Move module.",
        "fields": [
          {
            "name": "module",
            "description": "The module this enum was originally defined in.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveModule",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "The enum's (unqualified) type name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "abilities",
            "description": "The enum's abilities.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "MoveAbility",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeParameters",
            "description": "Constraints on the enum's formal type parameters.  Move bytecode does not name type\nparameters, so when they are referenced (e.g. in field types) they are identified by their\nindex in this list.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveStructTypeParameter",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "variants",
            "description": "The names and types of the enum's fields.  Field types reference type parameters, by their\nindex in the defining enum's `typeParameters` list.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveEnumVariant",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveDatatype",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveEnumConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveEnumEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveEnum",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveEnumEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveEnum",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveEnumVariant",
        "description": null,
        "fields": [
          {
            "name": "name",
            "description": "The name of the variant",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": "The names and types of the variant's fields.  Field types reference type parameters, by their\nindex in the defining enum's `typeParameters` list.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveField",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveField",
        "description": "Information for a particular field on a Move struct.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "OpenMoveType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveFunction",
        "description": "Signature of a function, defined in a Move module.",
        "fields": [
          {
            "name": "module",
            "description": "The module this function was defined in.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveModule",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "The function's (unqualified) name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "visibility",
            "description": "The function's visibility: `public`, `public(friend)`, or `private`.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "MoveVisibility",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isEntry",
            "description": "Whether the function has the `entry` modifier or not.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeParameters",
            "description": "Constraints on the function's formal type parameters.  Move bytecode does not name type\nparameters, so when they are referenced (e.g. in parameter and return types) they are\nidentified by their index in this list.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveFunctionTypeParameter",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parameters",
            "description": "The function's parameter types.  These types can reference type parameters introduce by this\nfunction (see `typeParameters`).",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OpenMoveType",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "return",
            "description": "The function's return types.  There can be multiple because functions in Move can return\nmultiple values.  These types can reference type parameters introduced by this function (see\n`typeParameters`).",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OpenMoveType",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveFunctionConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveFunctionEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveFunction",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveFunctionEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveFunction",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveFunctionTypeParameter",
        "description": null,
        "fields": [
          {
            "name": "constraints",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "MoveAbility",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveModule",
        "description": "Represents a module in Move, a library that defines struct types\nand functions that operate on these types.",
        "fields": [
          {
            "name": "package",
            "description": "The package that this Move module was defined in",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MovePackage",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "The module's (unqualified) name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fileFormatVersion",
            "description": "Format version of this module's bytecode.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "friends",
            "description": "Modules that this module considers friends (these modules can access `public(friend)`\nfunctions from this module).",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveModuleConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "struct",
            "description": "Look-up the definition of a struct defined in this module, by its name.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveStruct",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "structs",
            "description": "Iterate through the structs defined in this module.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveStructConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enum",
            "description": "Look-up the definition of a enum defined in this module, by its name.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveEnum",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enums",
            "description": "Iterate through the enums defined in this module.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveEnumConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "datatype",
            "description": "Look-up the definition of a datatype (struct or enum) defined in this module, by its name.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveDatatype",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "datatypes",
            "description": "Iterate through the datatypes (enmums and structs) defined in this module.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveDatatypeConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "function",
            "description": "Look-up the signature of a function defined in this module, by its name.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveFunction",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "functions",
            "description": "Iterate through the signatures of functions defined in this module.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveFunctionConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bytes",
            "description": "The Base64 encoded bcs serialization of the module.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "disassembly",
            "description": "Textual representation of the module's bytecode.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveModuleConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveModuleEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveModule",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveModuleEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveModule",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveObject",
        "description": "The representation of an object as a Move Object, which exposes additional information\n(content, module that governs it, version, is transferrable, etc.) about this object.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object. If type is not supplied,\nit defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object. These grant the owner the capability to\nmanage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are:\nNOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or\nsystem package upgrade transaction. LIVE, the version returned is the most recent for the\nobject, and it is not deleted or wrapped at that version. HISTORICAL, the object was\nreferenced at a specific version or checkpoint, so is fetched from historical tables and may\nnot be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or\nwrapped and only partial information can be loaded.\"",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that created this version of the object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The amount of SUI we would rebate if this object gets deleted or mutated. This number is\nrecalculated based on the present storage gas price.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this object.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the object's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "contents",
            "description": "Displays the contents of the Move object in a JSON string and through GraphQL types. Also\nprovides the flat representation of the type signature, and the BCS of the corresponding\ndata.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPublicTransfer",
            "description": "Determines whether a transaction can transfer this object, using the TransferObjects\ntransaction command or `sui::transfer::public_transfer`, both of which require the object to\nhave the `key` and `store` abilities.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "display",
            "description": "The set of named templates defined on-chain for the type of this object, to be handled\noff-chain. The server substitutes data from the object into these templates to generate a\ndisplay string per template.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DisplayEntry",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose\ntype have `copy`, `drop`, and `store`, and are specified using their type, and their BCS\ncontents, Base64 encoded.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values\nwhose type have `copy`, `drop`, and `store`, and are specified using their type, and their\nBCS contents, Base64 encoded. The value of a dynamic object field can also be accessed\noff-chain directly via its address (e.g. using `Query.object`).\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asCoin",
            "description": "Attempts to convert the Move object into a `0x2::coin::Coin`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Coin",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asStakedSui",
            "description": "Attempts to convert the Move object into a `0x3::staking_pool::StakedSui`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "StakedSui",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asCoinMetadata",
            "description": "Attempts to convert the Move object into a `0x2::coin::CoinMetadata`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "CoinMetadata",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asSuinsRegistration",
            "description": "Attempts to convert the Move object into a `SuinsRegistration` object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "SuinsRegistration",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveObjectConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveObjectEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveObject",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveObjectEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObject",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MovePackage",
        "description": "A MovePackage is a kind of Move object that represents code that has been published on chain.\nIt exposes information about its modules, type definitions, functions, and dependencies.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this package, optionally `filter`-ed.\n\nNote that objects owned by a package are inaccessible, because packages are immutable and\ncannot be owned by an address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this package. If type is not supplied,\nit defaults to `0x2::sui::SUI`.\n\nNote that coins owned by a package are inaccessible, because packages are immutable and\ncannot be owned by an address.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this package.\n\nNote that coins owned by a package are inaccessible, because packages are immutable and\ncannot be owned by an address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects owned by this package.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.\n\nNote that coins owned by a package are inaccessible, because packages are immutable and\ncannot be owned by an address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this package.\n\nNote that objects owned by a package are inaccessible, because packages are immutable and\ncannot be owned by an address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this package. These grant the owner the capability to\nmanage the associated domain.\n\nNote that objects owned by a package are inaccessible, because packages are immutable and\ncannot be owned by an address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are:\nNOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or\nsystem package upgrade transaction. LIVE, the version returned is the most recent for the\nobject, and it is not deleted or wrapped at that version. HISTORICAL, the object was\nreferenced at a specific version or checkpoint, so is fetched from historical tables and may\nnot be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or\nwrapped and only partial information can be loaded.\"",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the package's contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address\nPackages are always Immutable.",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that published or upgraded this package.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The amount of SUI we would rebate if this object gets deleted or mutated. This number is\nrecalculated based on the present storage gas price.\n\nNote that packages cannot be deleted or mutated, so this number is provided purely for\nreference.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this package.\n\nNote that objects that have been sent to a package become inaccessible.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the package's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "packageAtVersion",
            "description": "Fetch another version of this package (the package that shares this package's original ID,\nbut has the specified `version`).",
            "args": [
              {
                "name": "version",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MovePackage",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "packageVersions",
            "description": "Fetch all versions of this package (packages that share this package's original ID),\noptionally bounding the versions exclusively from below with `afterVersion`, or from above\nwith `beforeVersion`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "MovePackageVersionFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MovePackageConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latestPackage",
            "description": "Fetch the latest version of this package (the package with the highest `version` that shares\nthis packages's original ID)",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MovePackage",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "module",
            "description": "A representation of the module called `name` in this package, including the\nstructs and functions it defines.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveModule",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "modules",
            "description": "Paginate through the MoveModules defined in this package.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MoveModuleConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "linkage",
            "description": "The transitive dependencies of this package.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Linkage",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeOrigins",
            "description": "The (previous) versions of this package that introduced its types.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TypeOrigin",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "moduleBcs",
            "description": "BCS representation of the package's modules.  Modules appear as a sequence of pairs (module\nname, followed by module bytes), in alphabetic order by module name.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "MovePackageCheckpointFilter",
        "description": "Filter for paginating `MovePackage`s that were created within a range of checkpoints.",
        "fields": null,
        "inputFields": [
          {
            "name": "afterCheckpoint",
            "description": "Fetch packages that were published strictly after this checkpoint. Omitting this fetches\npackages published since genesis.",
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "beforeCheckpoint",
            "description": "Fetch packages that were published strictly before this checkpoint. Omitting this fetches\npackages published up to the latest checkpoint (inclusive).",
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MovePackageConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MovePackageEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MovePackage",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MovePackageEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MovePackage",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "MovePackageVersionFilter",
        "description": "Filter for paginating versions of a given `MovePackage`.",
        "fields": null,
        "inputFields": [
          {
            "name": "afterVersion",
            "description": "Fetch versions of this package that are strictly newer than this version. Omitting this\nfetches versions since the original version.",
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "beforeVersion",
            "description": "Fetch versions of this package that are strictly older than this version. Omitting this\nfetches versions up to the latest version (inclusive).",
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveStruct",
        "description": "Description of a struct type, defined in a Move module.",
        "fields": [
          {
            "name": "module",
            "description": "The module this struct was originally defined in.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveModule",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "The struct's (unqualified) type name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "abilities",
            "description": "Abilities this struct has.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "MoveAbility",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeParameters",
            "description": "Constraints on the struct's formal type parameters.  Move bytecode does not name type\nparameters, so when they are referenced (e.g. in field types) they are identified by their\nindex in this list.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveStructTypeParameter",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": "The names and types of the struct's fields.  Field types reference type parameters, by their\nindex in the defining struct's `typeParameters` list.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MoveField",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveDatatype",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveStructConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveStructEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MoveStruct",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveStructEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveStruct",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveStructTypeParameter",
        "description": null,
        "fields": [
          {
            "name": "constraints",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "MoveAbility",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isPhantom",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveType",
        "description": "Represents concrete types (no type parameters, no references).",
        "fields": [
          {
            "name": "repr",
            "description": "Flat representation of the type signature, as a displayable string.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "signature",
            "description": "Structured representation of the type signature.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "MoveTypeSignature",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "layout",
            "description": "Structured representation of the \"shape\" of values that match this type. May return no\nlayout if the type is invalid.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "MoveTypeLayout",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "abilities",
            "description": "The abilities this concrete type has. Returns no abilities if the type is invalid.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "MoveAbility",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "MoveTypeLayout",
        "description": "The shape of a concrete Move Type (a type with all its type parameters instantiated with concrete types), corresponding to the following recursive type:\n\ntype MoveTypeLayout =\n    \"address\"\n  | \"bool\"\n  | \"u8\" | \"u16\" | ... | \"u256\"\n  | { vector: MoveTypeLayout }\n  | {\n      struct: {\n        type: string,\n        fields: [{ name: string, layout: MoveTypeLayout }],\n      }\n    }\n  | { enum: [{\n          type: string,\n          variants: [{\n              name: string,\n              fields: [{ name: string, layout: MoveTypeLayout }],\n          }]\n      }]\n  }",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "MoveTypeSignature",
        "description": "The signature of a concrete Move Type (a type with all its type parameters instantiated with concrete types, that contains no references), corresponding to the following recursive type:\n\ntype MoveTypeSignature =\n    \"address\"\n  | \"bool\"\n  | \"u8\" | \"u16\" | ... | \"u256\"\n  | { vector: MoveTypeSignature }\n  | {\n      datatype: {\n        package: string,\n        module: string,\n        type: string,\n        typeParameters: [MoveTypeSignature],\n      }\n    }",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MoveValue",
        "description": null,
        "fields": [
          {
            "name": "type",
            "description": "The value's Move type.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The BCS representation of this value, Base64 encoded.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "data",
            "description": "Structured contents of a Move value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "MoveData",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "json",
            "description": "Representation of a Move value in JSON, where:\n\n- Addresses, IDs, and UIDs are represented in canonical form, as JSON strings.\n- Bools are represented by JSON boolean literals.\n- u8, u16, and u32 are represented as JSON numbers.\n- u64, u128, and u256 are represented as JSON strings.\n- Vectors are represented by JSON arrays.\n- Structs are represented by JSON objects.\n- Empty optional values are represented by `null`.\n\nThis form is offered as a less verbose convenience in cases where the layout of the type is\nknown by the client.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "MoveVisibility",
        "description": "The visibility modifier describes which modules can access this module member.\nBy default, a module member can be called only within the same module.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "PUBLIC",
            "description": "A public member can be accessed by any module.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIVATE",
            "description": "A private member can be accessed in the module it is defined in.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRIEND",
            "description": "A friend member can be accessed in the module it is defined in and any other module in\nits package that is explicitly specified in its friend list.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Mutation",
        "description": "Mutations are used to write to the Sui network.",
        "fields": [
          {
            "name": "executeTransactionBlock",
            "description": "Execute a transaction, committing its effects on chain.\n\n- `txBytes` is a `TransactionData` struct that has been BCS-encoded and then Base64-encoded.\n- `signatures` are a list of `flag || signature || pubkey` bytes, Base64-encoded.\n\nWaits until the transaction has reached finality on chain to return its transaction digest,\nor returns the error that prevented finality if that was not possible. A transaction is\nfinal when its effects are guaranteed on chain (it cannot be revoked).\n\nThere may be a delay between transaction finality and when GraphQL requests (including the\nrequest that issued the transaction) reflect its effects. As a result, queries that depend\non indexing the state of the chain (e.g. contents of output objects, address-level balance\ninformation at the time of the transaction), must wait for indexing to catch up by polling\nfor the transaction digest using `Query.transactionBlock`.",
            "args": [
              {
                "name": "txBytes",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "signatures",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ExecutionResult",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Object",
        "description": "An object in Sui is a package (set of Move bytecode modules) or object (typed data structure\nwith fields) with additional metadata detailing its id, version, transaction digest, owner\nfield indicating how this object can be accessed.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object. If type is not supplied,\nit defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object. These grant the owner the capability to\nmanage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are:\nNOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or\nsystem package upgrade transaction. LIVE, the version returned is the most recent for the\nobject, and it is not deleted or wrapped at that version. HISTORICAL, the object was\nreferenced at a specific version or checkpoint, so is fetched from historical tables and may\nnot be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or\nwrapped and only partial information can be loaded.\"",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's current contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address\nImmutable and Shared Objects do not have owners.",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that created this version of the object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The amount of SUI we would rebate if this object gets deleted or mutated. This number is\nrecalculated based on the present storage gas price.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this object.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the object's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "display",
            "description": "The set of named templates defined on-chain for the type of this object, to be handled\noff-chain. The server substitutes data from the object into these templates to generate a\ndisplay string per template.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DisplayEntry",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose\ntype have `copy`, `drop`, and `store`, and are specified using their type, and their BCS\ncontents, Base64 encoded.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values\nwhose type have `copy`, `drop`, and `store`, and are specified using their type, and their\nBCS contents, Base64 encoded. The value of a dynamic object field can also be accessed\noff-chain directly via its address (e.g. using `Query.object`).\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asMoveObject",
            "description": "Attempts to convert the object into a MoveObject",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveObject",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asMovePackage",
            "description": "Attempts to convert the object into a MovePackage",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MovePackage",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ObjectChange",
        "description": "Effect on an individual Object (keyed by its ID).",
        "fields": [
          {
            "name": "address",
            "description": "The address of the object that has changed.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputState",
            "description": "The contents of the object immediately before the transaction.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "outputState",
            "description": "The contents of the object immediately after the transaction.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "idCreated",
            "description": "Whether the ID was created in this transaction.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "idDeleted",
            "description": "Whether the ID was deleted in this transaction.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ObjectChangeConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ObjectChangeEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ObjectChange",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ObjectChangeEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ObjectChange",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ObjectConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ObjectEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Object",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ObjectEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Object",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "ObjectFilter",
        "description": "Constrains the set of objects returned. All filters are optional, and the resulting set of\nobjects are ones whose\n\n- Type matches the `type` filter,\n- AND, whose owner matches the `owner` filter,\n- AND, whose ID is in `objectIds` OR whose ID and version is in `objectKeys`.",
        "fields": null,
        "inputFields": [
          {
            "name": "type",
            "description": "Filter objects by their type's `package`, `package::module`, or their fully qualified type\nname.\n\nGeneric types can be queried by either the generic type name, e.g. `0x2::coin::Coin`, or by\nthe full type name, such as `0x2::coin::Coin<0x2::sui::SUI>`.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "owner",
            "description": "Filter for live objects by their current owners.",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "objectIds",
            "description": "Filter for live objects by their IDs.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "SuiAddress",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "objectKeys",
            "description": "Filter for live or potentially historical objects by their ID and version.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectKey",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "ObjectKey",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "objectId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "version",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ObjectKind",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NOT_INDEXED",
            "description": "The object is loaded from serialized data, such as the contents of a transaction that hasn't\nbeen indexed yet.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INDEXED",
            "description": "The object is fetched from the index.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "WRAPPED_OR_DELETED",
            "description": "The object is deleted or wrapped and only partial information can be loaded from the\nindexer.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "ObjectOwner",
        "description": "The object's owner type: Immutable, Shared, Parent, or Address.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Immutable",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Shared",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Parent",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "AddressOwner",
            "ofType": null
          }
        ]
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "ObjectRef",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "address",
            "description": "ID of the object.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "version",
            "description": "Version or sequence number of the object.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "digest",
            "description": "Digest of the object.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "OpenMoveType",
        "description": "Represents types that could contain references or free type parameters.  Such types can appear\nas function parameters, in fields of structs, or as actual type parameter.",
        "fields": [
          {
            "name": "signature",
            "description": "Structured representation of the type signature.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "OpenMoveTypeSignature",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "repr",
            "description": "Flat representation of the type signature, as a displayable string.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "OpenMoveTypeSignature",
        "description": "The shape of an abstract Move Type (a type that can contain free type parameters, and can optionally be taken by reference), corresponding to the following recursive type:\n\ntype OpenMoveTypeSignature = {\n  ref: (\"&\" | \"&mut\")?,\n  body: OpenMoveTypeSignatureBody,\n}\n\ntype OpenMoveTypeSignatureBody =\n    \"address\"\n  | \"bool\"\n  | \"u8\" | \"u16\" | ... | \"u256\"\n  | { vector: OpenMoveTypeSignatureBody }\n  | {\n      datatype {\n        package: string,\n        module: string,\n        type: string,\n        typeParameters: [OpenMoveTypeSignatureBody]\n      }\n    }\n  | { typeParameter: number }",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "OwnedOrImmutable",
        "description": "A Move object, either immutable, or owned mutable.",
        "fields": [
          {
            "name": "address",
            "description": "ID of the object being read.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": "Version of the object being read.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents at this version, encoded as a Base58\nstring.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "object",
            "description": "The object at this version.  May not be available due to pruning.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Owner",
        "description": "An Owner is an entity that can own an object. Each Owner is identified by a SuiAddress which\nrepresents either an Address (corresponding to a public key of an account) or an Object, but\nnever both (it is not known up-front whether a given Owner is an Address or an Object).",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object or address, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object or address. If type is not\nsupplied, it defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object or address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object or address.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object or address.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object or address.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object or address. These grant the owner the\ncapability to manage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asAddress",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Address",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "asObject",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose\ntype have `copy`, `drop`, and `store`, and are specified using their type, and their BCS\ncontents, Base64 encoded.\n\nThis field exists as a convenience when accessing a dynamic field on a wrapped object.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values\nwhose type have `copy`, `drop`, and `store`, and are specified using their type, and their\nBCS contents, Base64 encoded. The value of a dynamic object field can also be accessed\noff-chain directly via its address (e.g. using `Query.object`).\n\nThis field exists as a convenience when accessing a dynamic field on a wrapped object.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nThis field exists as a convenience when accessing a dynamic field on a wrapped object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PageInfo",
        "description": "Information about pagination in a connection",
        "fields": [
          {
            "name": "hasPreviousPage",
            "description": "When paginating backwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasNextPage",
            "description": "When paginating forwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startCursor",
            "description": "When paginating backwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endCursor",
            "description": "When paginating forwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Parent",
        "description": "If the object's owner is a Parent, this object is part of a dynamic field (it is the value of\nthe dynamic field, or the intermediate Field object itself). Also note that if the owner\nis a parent, then it's guaranteed to be an object.",
        "fields": [
          {
            "name": "parent",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "ProgrammableTransaction",
        "description": "A single transaction, or command, in the programmable transaction block.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "MoveCallTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "TransferObjectsTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SplitCoinsTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MergeCoinsTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "PublishTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "UpgradeTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "MakeMoveVecTransaction",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "ProgrammableTransactionBlock",
        "description": "A user transaction that allows the interleaving of native commands (like transfer, split coins,\nmerge coins, etc) and move calls, executed atomically.",
        "fields": [
          {
            "name": "inputs",
            "description": "Input objects or primitive values.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionInputConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transactions",
            "description": "The transaction commands, executed sequentially.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ProgrammableTransactionConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ProgrammableTransactionConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ProgrammableTransactionEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "ProgrammableTransaction",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ProgrammableTransactionEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "ProgrammableTransaction",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ProtocolConfigAttr",
        "description": "A single protocol configuration value.",
        "fields": [
          {
            "name": "key",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "value",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ProtocolConfigFeatureFlag",
        "description": "Whether or not a single feature is enabled in the protocol config.",
        "fields": [
          {
            "name": "key",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "value",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ProtocolConfigs",
        "description": "Constants that control how the chain operates.\n\nThese can only change during protocol upgrades which happen on epoch boundaries.",
        "fields": [
          {
            "name": "protocolVersion",
            "description": "The protocol is not required to change on every epoch boundary, so the protocol version\ntracks which change to the protocol these configs are from.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "featureFlags",
            "description": "List all available feature flags and their values.  Feature flags are a form of boolean\nconfiguration that are usually used to gate features while they are in development.  Once a\nflag has been enabled, it is rare for it to be disabled.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ProtocolConfigFeatureFlag",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "configs",
            "description": "List all available configurations and their values.  These configurations can take any value\n(but they will all be represented in string form), and do not include feature flags.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ProtocolConfigAttr",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "config",
            "description": "Query for the value of the configuration with name `key`.",
            "args": [
              {
                "name": "key",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "ProtocolConfigAttr",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "featureFlag",
            "description": "Query for the state of the feature flag with name `key`.",
            "args": [
              {
                "name": "key",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "ProtocolConfigFeatureFlag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublishTransaction",
        "description": "Publishes a Move Package.",
        "fields": [
          {
            "name": "modules",
            "description": "Bytecode for the modules to be published, BCS serialized and Base64 encoded.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Base64",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dependencies",
            "description": "IDs of the transitive dependencies of the package to be published.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Pure",
        "description": "BCS encoded primitive value (not an object or Move struct).",
        "fields": [
          {
            "name": "bytes",
            "description": "BCS serialized and Base64 encoded primitive value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Query",
        "description": null,
        "fields": [
          {
            "name": "chainIdentifier",
            "description": "First four bytes of the network's genesis checkpoint digest (uniquely identifies the\nnetwork).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "availableRange",
            "description": "Range of checkpoints that the RPC has data available for (for data\nthat can be tied to a particular checkpoint).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AvailableRange",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceConfig",
            "description": "Configuration for this RPC service",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ServiceConfig",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dryRunTransactionBlock",
            "description": "Simulate running a transaction to inspect its effects without\ncommitting to them on-chain.\n\n`txBytes` either a `TransactionData` struct or a `TransactionKind`\nstruct, BCS-encoded and then Base64-encoded.  The expected\ntype is controlled by the presence or absence of `txMeta`: If\npresent, `txBytes` is assumed to be a `TransactionKind`, if\nabsent, then `TransactionData`.\n\n`txMeta` the data that is missing from a `TransactionKind` to make\na `TransactionData` (sender address and gas information).  All\nits fields are nullable.\n\n`skipChecks` optional flag to disable the usual verification\nchecks that prevent access to objects that are owned by\naddresses other than the sender, and calling non-public,\nnon-entry functions, and some other checks.  Defaults to false.",
            "args": [
              {
                "name": "txBytes",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "txMeta",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionMetadata",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "skipChecks",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DryRunResult",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "Look up an Owner by its SuiAddress.\n\n`rootVersion` represents the version of the root object in some nested chain of dynamic\nfields. It allows consistent historical queries for the case of wrapped objects, which don't\nhave a version. For example, if querying the dynamic field of a table wrapped in a parent\nobject, passing the parent object's version here will ensure we get the dynamic field's\nstate at the moment that parent's version was created.\n\nAlso, if this Owner is an object itself, `rootVersion` will be used to bound its version\nfrom above when querying `Owner.asObject`. This can be used, for example, to get the\ncontents of a dynamic object field when its parent was at `rootVersion`.\n\nIf `rootVersion` is omitted, dynamic fields will be from a consistent snapshot of the Sui\nstate at the latest checkpoint known to the GraphQL RPC. Similarly, `Owner.asObject` will\nreturn the object's version at the latest checkpoint.",
            "args": [
              {
                "name": "address",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "rootVersion",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "UInt53",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Owner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "object",
            "description": "The object corresponding to the given address at the (optionally) given version.\nWhen no version is given, the latest version is returned.",
            "args": [
              {
                "name": "address",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "version",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "UInt53",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "package",
            "description": "The package corresponding to the given address (at the optionally given version).\n\nWhen no version is given, the package is loaded directly from the address given. Otherwise,\nthe address is translated before loading to point to the package whose original ID matches\nthe package at `address`, but whose version is `version`. For non-system packages, this\nmight result in a different address than `address` because different versions of a package,\nintroduced by upgrades, exist at distinct addresses.\n\nNote that this interpretation of `version` is different from a historical object read (the\ninterpretation of `version` for the `object` query).",
            "args": [
              {
                "name": "address",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "version",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "UInt53",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MovePackage",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latestPackage",
            "description": "The latest version of the package at `address`.\n\nThis corresponds to the package with the highest `version` that shares its original ID with\nthe package at `address`.",
            "args": [
              {
                "name": "address",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MovePackage",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "address",
            "description": "Look-up an Account by its SuiAddress.",
            "args": [
              {
                "name": "address",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Address",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": "Fetch a structured representation of a concrete type, including its layout information.\nFails if the type is malformed.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "epoch",
            "description": "Fetch epoch information by ID (defaults to the latest epoch).",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "UInt53",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "checkpoint",
            "description": "Fetch checkpoint information by sequence number or digest (defaults to the latest available\ncheckpoint).",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "CheckpointId",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Checkpoint",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transactionBlock",
            "description": "Fetch a transaction block by its transaction digest.",
            "args": [
              {
                "name": "digest",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects that exist in the network.\n\nThe type field is a string of the inner type of the coin by which to filter (e.g.\n`0x2::sui::SUI`). If no type is provided, it will default to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "checkpoints",
            "description": "The checkpoints that exist in the network.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CheckpointConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transactionBlocks",
            "description": "The transaction blocks that exist in the network.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "events",
            "description": "Query events that are emitted in the network.\nWe currently do not support filtering by emitting module and event type\nat the same time so if both are provided in one filter, the query will error.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "EventFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "EventConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "The objects that exist in the network.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "packages",
            "description": "The Move packages that exist in the network, optionally filtered to be strictly before\n`beforeCheckpoint` and/or strictly after `afterCheckpoint`.\n\nThis query returns all versions of a given user package that appear between the specified\ncheckpoints, but only records the latest versions of system packages.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "MovePackageCheckpointFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MovePackageConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "packageVersions",
            "description": "Fetch all versions of package at `address` (packages that share this package's original ID),\noptionally bounding the versions exclusively from below with `afterVersion`, or from above\nwith `beforeVersion`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "address",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "MovePackageVersionFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MovePackageConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "protocolConfig",
            "description": "Fetch the protocol config by protocol version (defaults to the latest protocol\nversion known to the GraphQL service).",
            "args": [
              {
                "name": "protocolVersion",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "UInt53",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ProtocolConfigs",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "resolveSuinsAddress",
            "description": "Resolves a SuiNS `domain` name to an address, if it has been bound.",
            "args": [
              {
                "name": "domain",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Address",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "packageByName",
            "description": "Fetch a package by its name (using dot move service)",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "MovePackage",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeByName",
            "description": "Fetch a type that includes dot move service names in it.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coinMetadata",
            "description": "The coin metadata associated with the given coin type.",
            "args": [
              {
                "name": "coinType",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CoinMetadata",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "verifyZkloginSignature",
            "description": "Verify a zkLogin signature based on the provided transaction or personal message\nbased on current epoch, chain id, and latest JWKs fetched on-chain. If the\nsignature is valid, the function returns a `ZkLoginVerifyResult` with success as\ntrue and an empty list of errors. If the signature is invalid, the function returns\na `ZkLoginVerifyResult` with success as false with a list of errors.\n\n- `bytes` is either the personal message in raw bytes or transaction data bytes in\nBCS-encoded and then Base64-encoded.\n- `signature` is a serialized zkLogin signature that is Base64-encoded.\n- `intentScope` is an enum that specifies the intent scope to be used to parse bytes.\n- `author` is the address of the signer of the transaction or personal msg.",
            "args": [
              {
                "name": "bytes",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Base64",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "signature",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Base64",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "intentScope",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "ZkLoginIntentScope",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "author",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ZkLoginVerifyResult",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RandomnessStateCreateTransaction",
        "description": null,
        "fields": [
          {
            "name": "_",
            "description": "A workaround to define an empty variant of a GraphQL union.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RandomnessStateUpdateTransaction",
        "description": "System transaction to update the source of on-chain randomness.",
        "fields": [
          {
            "name": "epoch",
            "description": "Epoch of the randomness state update transaction.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "randomnessRound",
            "description": "Randomness round of the update.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "randomBytes",
            "description": "Updated random bytes, encoded as Base64.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "randomnessObjInitialSharedVersion",
            "description": "The initial version the randomness object was shared at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Receiving",
        "description": "A Move object that can be received in this transaction.",
        "fields": [
          {
            "name": "address",
            "description": "ID of the object being read.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": "Version of the object being read.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents at this version, encoded as a Base58\nstring.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "object",
            "description": "The object at this version.  May not be available due to pruning.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Result",
        "description": "The result of another transaction command.",
        "fields": [
          {
            "name": "cmd",
            "description": "The index of the previous command (0-indexed) that returned this result.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ix",
            "description": "If the previous command returns multiple values, this is the index of the individual result\namong the multiple results from that command (also 0-indexed).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SafeMode",
        "description": "Information about whether epoch changes are using safe mode.",
        "fields": [
          {
            "name": "enabled",
            "description": "Whether safe mode was used for the last epoch change.  The system will retry a full epoch\nchange on every epoch boundary and automatically reset this flag if so.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasSummary",
            "description": "Accumulated fees for computation and cost that have not been added to the various reward\npools, because the full epoch change did not happen.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "GasCostSummary",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ServiceConfig",
        "description": "The enabled features and service limits configured by the server.",
        "fields": [
          {
            "name": "isEnabled",
            "description": "Check whether `feature` is enabled on this GraphQL service.",
            "args": [
              {
                "name": "feature",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Feature",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enabledFeatures",
            "description": "List of all features that are enabled on this GraphQL service.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Feature",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxQueryDepth",
            "description": "The maximum depth a GraphQL query can be to be accepted by this service.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxQueryNodes",
            "description": "The maximum number of nodes (field names) the service will accept in a single query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxOutputNodes",
            "description": "The maximum number of output nodes in a GraphQL response.\n\nNon-connection nodes have a count of 1, while connection nodes are counted as\nthe specified 'first' or 'last' number of items, or the default_page_size\nas set by the server if those arguments are not set.\n\nCounts accumulate multiplicatively down the query tree. For example, if a query starts\nwith a connection of first: 10 and has a field to a connection with last: 20, the count\nat the second level would be 200 nodes. This is then summed to the count of 10 nodes\nat the first level, for a total of 210 nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxDbQueryCost",
            "description": "Maximum estimated cost of a database query used to serve a GraphQL request.  This is\nmeasured in the same units that the database uses in EXPLAIN queries.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultPageSize",
            "description": "Default number of elements allowed on a single page of a connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxPageSize",
            "description": "Maximum number of elements allowed on a single page of a connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutationTimeoutMs",
            "description": "Maximum time in milliseconds spent waiting for a response from fullnode after issuing a\na transaction to execute. Note that the transaction may still succeed even in the case of a\ntimeout. Transactions are idempotent, so a transaction that times out should be resubmitted\nuntil the network returns a definite response (success or failure, not timeout).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "requestTimeoutMs",
            "description": "Maximum time in milliseconds that will be spent to serve one query request.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTransactionPayloadSize",
            "description": "The maximum bytes allowed for the `txBytes` and `signatures` fields of the GraphQL mutation\n`executeTransactionBlock` node, or for the `txBytes` of a `dryRunTransactionBlock`.\n\nIt is the value of the maximum transaction bytes (including the signatures) allowed by the\nprotocol, plus the Base64 overhead (roughly 1/3 of the original string).",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxQueryPayloadSize",
            "description": "The maximum bytes allowed for the JSON object in the request body of a GraphQL query, for\nthe read part of the query.\nIn case of mutations or dryRunTransactionBlocks the txBytes and signatures are not\nincluded in this limit.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTypeArgumentDepth",
            "description": "Maximum nesting allowed in type arguments in Move Types resolved by this service.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTypeArgumentWidth",
            "description": "Maximum number of type arguments passed into a generic instantiation of a Move Type resolved\nby this service.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTypeNodes",
            "description": "Maximum number of structs that need to be processed when calculating the layout of a single\nMove Type.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxMoveValueDepth",
            "description": "Maximum nesting allowed in struct fields when calculating the layout of a single Move Type.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTransactionIds",
            "description": "Maximum number of transaction ids that can be passed to a `TransactionBlockFilter`.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxScanLimit",
            "description": "Maximum number of candidates to scan when gathering a page of results.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Shared",
        "description": "A shared object is an object that is shared using the 0x2::transfer::share_object function.\nUnlike owned objects, once an object is shared, it stays mutable and is accessible by anyone.",
        "fields": [
          {
            "name": "initialSharedVersion",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SharedInput",
        "description": "A Move object that's shared.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "initialSharedVersion",
            "description": "The version that this this object was shared at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutable",
            "description": "Controls whether the transaction block can reference the shared object as a mutable\nreference or by value. This has implications for scheduling: Transactions that just read\nshared objects at a certain version (mutable = false) can be executed concurrently, while\ntransactions that write shared objects (mutable = true) must be executed serially with\nrespect to each other.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SharedObjectCancelled",
        "description": "The transaction accpeted a shared object as input, but its execution was cancelled.",
        "fields": [
          {
            "name": "address",
            "description": "ID of the shared object.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": "The assigned shared object version. It is a special version indicating transaction cancellation reason.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SharedObjectDelete",
        "description": "The transaction accepted a shared object as input, but it was deleted before the transaction\nexecuted.",
        "fields": [
          {
            "name": "address",
            "description": "ID of the shared object.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": "The version of the shared object that was assigned to this transaction during by consensus,\nduring sequencing.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutable",
            "description": "Whether this transaction intended to use this shared object mutably or not. See\n`SharedInput.mutable` for further details.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SharedObjectRead",
        "description": "The transaction accepted a shared object as input, but only to read it.",
        "fields": [
          {
            "name": "address",
            "description": "ID of the object being read.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": "Version of the object being read.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents at this version, encoded as a Base58\nstring.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "object",
            "description": "The object at this version.  May not be available due to pruning.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SplitCoinsTransaction",
        "description": "Splits off coins with denominations in `amounts` from `coin`, returning multiple results (as\nmany as there are amounts.)",
        "fields": [
          {
            "name": "coin",
            "description": "The coin to split.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "TransactionArgument",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "amounts",
            "description": "The denominations to split off from the coin.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "TransactionArgument",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "StakeStatus",
        "description": "The stake's possible status: active, pending, or unstaked.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "ACTIVE",
            "description": "The stake object is active in a staking pool and it is generating rewards.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PENDING",
            "description": "The stake awaits to join a staking pool in the next epoch.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNSTAKED",
            "description": "The stake is no longer active in any staking pool.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StakeSubsidy",
        "description": "Parameters that control the distribution of the stake subsidy.",
        "fields": [
          {
            "name": "balance",
            "description": "SUI set aside for stake subsidies -- reduces over time as stake subsidies are paid out over\ntime.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distributionCounter",
            "description": "Number of times stake subsidies have been distributed subsidies are distributed with other\nstaking rewards, at the end of the epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "currentDistributionAmount",
            "description": "Amount of stake subsidy deducted from the balance per distribution -- decays over time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "periodLength",
            "description": "Maximum number of stake subsidy distributions that occur with the same distribution amount\n(before the amount is reduced).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "decreaseRate",
            "description": "Percentage of the current distribution amount to deduct at the end of the current subsidy\nperiod, expressed in basis points.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StakedSui",
        "description": "Represents a `0x3::staking_pool::StakedSui` Move object on-chain.",
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object. If type is not supplied,\nit defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object. These grant the owner the capability to\nmanage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are:\nNOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or\nsystem package upgrade transaction. LIVE, the version returned is the most recent for the\nobject, and it is not deleted or wrapped at that version. HISTORICAL, the object was\nreferenced at a specific version or checkpoint, so is fetched from historical tables and may\nnot be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or\nwrapped and only partial information can be loaded.\"",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that created this version of the object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The amount of SUI we would rebate if this object gets deleted or mutated. This number is\nrecalculated based on the present storage gas price.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this object.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the object's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "contents",
            "description": "Displays the contents of the Move object in a JSON string and through GraphQL types. Also\nprovides the flat representation of the type signature, and the BCS of the corresponding\ndata.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPublicTransfer",
            "description": "Determines whether a transaction can transfer this object, using the TransferObjects\ntransaction command or `sui::transfer::public_transfer`, both of which require the object to\nhave the `key` and `store` abilities.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "display",
            "description": "The set of named templates defined on-chain for the type of this object, to be handled\noff-chain. The server substitutes data from the object into these templates to generate a\ndisplay string per template.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DisplayEntry",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose\ntype have `copy`, `drop`, and `store`, and are specified using their type, and their BCS\ncontents, Base64 encoded.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values\nwhose type have `copy`, `drop`, and `store`, and are specified using their type, and their\nBCS contents, Base64 encoded. The value of a dynamic object field can also be accessed\noff-chain directly via its address (e.g. using `Query.object`).\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakeStatus",
            "description": "A stake can be pending, active, or unstaked",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "StakeStatus",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "activatedEpoch",
            "description": "The epoch at which this stake became active.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "requestedEpoch",
            "description": "The epoch at which this object was requested to join a stake pool.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "poolId",
            "description": "The object id of the validator staking pool this stake belongs to.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "principal",
            "description": "The SUI that was initially staked.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "estimatedReward",
            "description": "The estimated reward for this stake object, calculated as:\n\nprincipal * (initial_stake_rate / current_stake_rate - 1.0)\n\nOr 0, if this value is negative, where:\n\n- `initial_stake_rate` is the stake rate at the epoch this stake was activated at.\n- `current_stake_rate` is the stake rate in the current epoch.\n\nThis value is only available if the stake is active.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StakedSuiConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "StakedSuiEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "StakedSui",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StakedSuiEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSui",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StorageFund",
        "description": "SUI set aside to account for objects stored on-chain.",
        "fields": [
          {
            "name": "totalObjectStorageRebates",
            "description": "Sum of storage rebates of live objects on chain.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nonRefundableBalance",
            "description": "The portion of the storage fund that will never be refunded through storage rebates.\n\nThe system maintains an invariant that the sum of all storage fees into the storage fund is\nequal to the sum of of all storage rebates out, the total storage rebates remaining, and the\nnon-refundable balance.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8\ncharacter sequences. The String type is most often used by GraphQL to\nrepresent free-form human-readable text.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "SuiAddress",
        "description": "String containing 32B hex-encoded address, with a leading \"0x\". Leading zeroes can be omitted on input but will always appear in outputs (SuiAddress in output is guaranteed to be 66 characters long).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SuinsRegistration",
        "description": null,
        "fields": [
          {
            "name": "address",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objects",
            "description": "Objects owned by this object, optionally `filter`-ed.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "MoveObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balance",
            "description": "Total balance of all coins with marker type owned by this object. If type is not supplied,\nit defaults to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Balance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balances",
            "description": "The balances of all coin types owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coins",
            "description": "The coin objects for this object.\n\n`type` is a filter on the coin's type parameter, defaulting to `0x2::sui::SUI`.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "type",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CoinConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakedSuis",
            "description": "The `0x3::staking_pool::StakedSui` objects owned by this object.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StakedSuiConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultSuinsName",
            "description": "The domain explicitly configured as the default domain pointing to this object.",
            "args": [
              {
                "name": "format",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "DomainFormat",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suinsRegistrations",
            "description": "The SuinsRegistration NFTs owned by this object. These grant the owner the capability to\nmanage the associated domain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistrationConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "The current status of the object as read from the off-chain store. The possible states are:\nNOT_INDEXED, the object is loaded from serialized data, such as the contents of a genesis or\nsystem package upgrade transaction. LIVE, the version returned is the most recent for the\nobject, and it is not deleted or wrapped at that version. HISTORICAL, the object was\nreferenced at a specific version or checkpoint, so is fetched from historical tables and may\nnot be the latest version of the object. WRAPPED_OR_DELETED, the object is deleted or\nwrapped and only partial information can be loaded.\"",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "ObjectKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "digest",
            "description": "32-byte hash that identifies the object's contents, encoded as a Base58 string.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "owner",
            "description": "The owner type of this object: Immutable, Shared, Parent, Address",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "ObjectOwner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousTransactionBlock",
            "description": "The transaction block that created this version of the object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "storageRebate",
            "description": "The amount of SUI we would rebate if this object gets deleted or mutated. This number is\nrecalculated based on the present storage gas price.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "receivedTransactionBlocks",
            "description": "The transaction blocks that sent objects to this object.\n\n`scanLimit` restricts the number of candidate transactions scanned when gathering a page of\nresults. It is required for queries that apply more than two complex filters (on function,\nkind, sender, recipient, input object, changed object, or ids), and can be at most\n`serviceConfig.maxScanLimit`.\n\nWhen the scan limit is reached the page will be returned even if it has fewer than `first`\nresults when paginating forward (`last` when paginating backwards). If there are more\ntransactions to scan, `pageInfo.hasNextPage` (or `pageInfo.hasPreviousPage`) will be set to\n`true`, and `PageInfo.endCursor` (or `PageInfo.startCursor`) will be set to the last\ntransaction that was scanned as opposed to the last (or first) transaction in the page.\n\nRequesting the next (or previous) page after this cursor will resume the search, scanning\nthe next `scanLimit` many transactions in the direction of pagination, and so on until all\ntransactions in the scanning range have been visited.\n\nBy default, the scanning range includes all transactions known to GraphQL, but it can be\nrestricted by the `after` and `before` cursors, and the `beforeCheckpoint`,\n`afterCheckpoint` and `atCheckpoint` filters.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TransactionBlockFilter",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "scanLimit",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlockConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "The Base64-encoded BCS serialization of the object's content.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "contents",
            "description": "Displays the contents of the Move object in a JSON string and through GraphQL types. Also\nprovides the flat representation of the type signature, and the BCS of the corresponding\ndata.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveValue",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPublicTransfer",
            "description": "Determines whether a transaction can transfer this object, using the TransferObjects\ntransaction command or `sui::transfer::public_transfer`, both of which require the object to\nhave the `key` and `store` abilities.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "display",
            "description": "The set of named templates defined on-chain for the type of this object, to be handled\noff-chain. The server substitutes data from the object into these templates to generate a\ndisplay string per template.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DisplayEntry",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicField",
            "description": "Access a dynamic field on an object using its name. Names are arbitrary Move values whose\ntype have `copy`, `drop`, and `store`, and are specified using their type, and their BCS\ncontents, Base64 encoded.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicObjectField",
            "description": "Access a dynamic object field on an object using its name. Names are arbitrary Move values\nwhose type have `copy`, `drop`, and `store`, and are specified using their type, and their\nBCS contents, Base64 encoded. The value of a dynamic object field can also be accessed\noff-chain directly via its address (e.g. using `Query.object`).\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DynamicFieldName",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DynamicField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dynamicFields",
            "description": "The dynamic fields and dynamic object fields on an object.\n\nDynamic fields on wrapped objects can be accessed by using the same API under the Owner\ntype.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DynamicFieldConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "domain",
            "description": "Domain name of the SuinsRegistration object",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "IMoveObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IObject",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "IOwner",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SuinsRegistrationConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "SuinsRegistrationEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "SuinsRegistration",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SuinsRegistrationEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "SuinsRegistration",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SystemParameters",
        "description": "Details of the system that are decided during genesis.",
        "fields": [
          {
            "name": "durationMs",
            "description": "Target duration of an epoch, in milliseconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakeSubsidyStartEpoch",
            "description": "The epoch at which stake subsidies start being paid out.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "minValidatorCount",
            "description": "The minimum number of active validators that the system supports.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxValidatorCount",
            "description": "The maximum number of active validators that the system supports.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "minValidatorJoiningStake",
            "description": "Minimum stake needed to become a new validator.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validatorLowStakeThreshold",
            "description": "Validators with stake below this threshold will enter the grace period (see\n`validatorLowStakeGracePeriod`), after which they are removed from the active validator set.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validatorVeryLowStakeThreshold",
            "description": "Validators with stake below this threshold will be removed from the active validator set\nat the next epoch boundary, without a grace period.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validatorLowStakeGracePeriod",
            "description": "The number of epochs that a validator has to recover from having less than\n`validatorLowStakeThreshold` stake.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "TransactionArgument",
        "description": "An argument to a programmable transaction command.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "GasCoin",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Input",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Result",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "TransactionBlock",
        "description": null,
        "fields": [
          {
            "name": "digest",
            "description": "A 32-byte hash that uniquely identifies the transaction block contents, encoded in Base58.\nThis serves as a unique id for the block on chain.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sender",
            "description": "The address corresponding to the public key that signed this transaction. System\ntransactions do not have senders.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Address",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasInput",
            "description": "The gas input field provides information on what objects were used as gas as well as the\nowner of the gas object(s) and information on the gas price and budget.\n\nIf the owner of the gas object(s) is not the same as the sender, the transaction block is a\nsponsored transaction block.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "GasInput",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "kind",
            "description": "The type of this transaction as well as the commands and/or parameters comprising the\ntransaction of this kind.",
            "args": [],
            "type": {
              "kind": "UNION",
              "name": "TransactionBlockKind",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "signatures",
            "description": "A list of all signatures, Base64-encoded, from senders, and potentially the gas owner if\nthis is a sponsored transaction.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Base64",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "effects",
            "description": "The effects field captures the results to the chain of executing this transaction.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlockEffects",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expiration",
            "description": "This field is set by senders of a transaction block. It is an epoch reference that sets a\ndeadline after which validators will no longer consider the transaction valid. By default,\nthere is no deadline for when a transaction must execute.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "Serialized form of this transaction's `SenderSignedData`, BCS serialized and Base64 encoded.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TransactionBlockConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TransactionBlockEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TransactionBlock",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TransactionBlockEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransactionBlock",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TransactionBlockEffects",
        "description": "The effects representing the result of executing a transaction block.",
        "fields": [
          {
            "name": "transactionBlock",
            "description": "The transaction that ran to produce these effects.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TransactionBlock",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": "Whether the transaction executed successfully or not.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "ExecutionStatus",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lamportVersion",
            "description": "The latest version of all objects (apart from packages) that have been created or modified\nby this transaction, immediately following this transaction.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UInt53",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "errors",
            "description": "The reason for a transaction failure, if it did fail.\nIf the error is a Move abort, the error message will be resolved to a human-readable form if\npossible, otherwise it will fall back to displaying the abort code and location.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dependencies",
            "description": "Transactions whose outputs this transaction depends upon.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "DependencyConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasEffects",
            "description": "Effects to the gas object.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "GasEffects",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "unchangedSharedObjects",
            "description": "Shared objects that are referenced by but not changed by this transaction.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "UnchangedSharedObjectConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "objectChanges",
            "description": "The effect this transaction had on objects on-chain.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ObjectChangeConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "balanceChanges",
            "description": "The effect this transaction had on the balances (sum of coin values per coin type) of\naddresses and objects.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BalanceChangeConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "events",
            "description": "Events emitted by this transaction block.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "EventConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timestamp",
            "description": "Timestamp corresponding to the checkpoint this transaction was finalized in.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "epoch",
            "description": "The epoch this transaction was finalized in.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Epoch",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "checkpoint",
            "description": "The checkpoint this transaction was finalized in.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Checkpoint",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bcs",
            "description": "Base64 encoded bcs serialization of the on-chain transaction effects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Base64",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TransactionBlockFilter",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "function",
            "description": "Filter transactions by move function called. Calls can be filtered by the `package`,\n`package::module`, or the `package::module::name` of their function.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "kind",
            "description": "An input filter selecting for either system or programmable transactions.",
            "type": {
              "kind": "ENUM",
              "name": "TransactionBlockKindInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "afterCheckpoint",
            "description": "Limit to transactions that occured strictly after the given checkpoint.",
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "atCheckpoint",
            "description": "Limit to transactions in the given checkpoint.",
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "beforeCheckpoint",
            "description": "Limit to transaction that occured strictly before the given checkpoint.",
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "affectedAddress",
            "description": "Limit to transactions that interacted with the given address. The address could be a\nsender, sponsor, or recipient of the transaction.",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "signAddress",
            "description": "Limit to transactions that were sent by the given address. NOTE: this input filter has been\ndeprecated in favor of `sentAddress` which behaves identically but is named more clearly.\nBoth filters restrict transactions by their sender, only, not signers in general.\n\nThis filter will be removed with 1.36.0 (2024-10-14).",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "sentAddress",
            "description": "Limit to transactions that were sent by the given address.",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recvAddress",
            "description": "Limit to transactions that sent an object to the given address. NOTE: this input filter has\nbeen deprecated in favor of `affectedAddress` which offers an easier to understand\nbehavior.\n\nThis filter will be removed with 1.36.0 (2024-10-14), or at least one release after\n`affectedAddress` is introduced, whichever is later.",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inputObject",
            "description": "Limit to transactions that accepted the given object as an input. NOTE: this input filter\nhas been deprecated in favor of `affectedObject` which offers an easier to under behavior.\n\nThis filter will be removed with 1.36.0 (2024-10-14), or at least one release after\n`affectedObject` is introduced, whichever is later.",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "changedObject",
            "description": "Limit to transactions that output a versioon of this object. NOTE: this input filter has\nbeen deprecated in favor of `affectedObject` which offers an easier to understand behavor.\n\nThis filter will be removed with 1.36.0 (2024-10-14), or at least one release after\n`affectedObject` is introduced, whichever is later.",
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "transactionIds",
            "description": "Select transactions by their digest.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "TransactionBlockKind",
        "description": "The kind of transaction block, either a programmable transaction or a system transaction.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "ConsensusCommitPrologueTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "GenesisTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "ChangeEpochTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "ProgrammableTransactionBlock",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "AuthenticatorStateUpdateTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "RandomnessStateUpdateTransaction",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "EndOfEpochTransaction",
            "ofType": null
          }
        ]
      },
      {
        "kind": "ENUM",
        "name": "TransactionBlockKindInput",
        "description": "An input filter selecting for either system or programmable transactions.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SYSTEM_TX",
            "description": "A system transaction can be one of several types of transactions.\nSee [unions/transaction-block-kind] for more details.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PROGRAMMABLE_TX",
            "description": "A user submitted transaction block.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "TransactionInput",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "OwnedOrImmutable",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SharedInput",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Receiving",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Pure",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "TransactionInputConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TransactionInputEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "TransactionInput",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TransactionInputEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "TransactionInput",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TransactionMetadata",
        "description": "The optional extra data a user can provide to a transaction dry run.\n`sender` defaults to `0x0`. If gasObjects` is not present, or is an empty list,\nit is substituted with a mock Coin object, `gasPrice` defaults to the reference\ngas price, `gasBudget` defaults to the max gas budget and `gasSponsor` defaults\nto the sender.",
        "fields": null,
        "inputFields": [
          {
            "name": "sender",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "gasPrice",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "gasObjects",
            "description": null,
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ObjectRef",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "gasBudget",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "gasSponsor",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TransferObjectsTransaction",
        "description": "Transfers `inputs` to `address`. All inputs must have the `store` ability (allows public\ntransfer) and must not be previously immutable or shared.",
        "fields": [
          {
            "name": "inputs",
            "description": "The objects to transfer.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "TransactionArgument",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "address",
            "description": "The address to transfer to.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "TransactionArgument",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TypeOrigin",
        "description": "Information about which previous versions of a package introduced its types.",
        "fields": [
          {
            "name": "module",
            "description": "Module defining the type.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "struct",
            "description": "Name of the struct.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "definingId",
            "description": "The storage ID of the package that first defined this type.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "UInt53",
        "description": "An unsigned integer that can hold values up to 2^53 - 1. This can be treated similarly to `Int`,\nbut it is guaranteed to be non-negative, and it may be larger than 2^32 - 1.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "UnchangedSharedObject",
        "description": "Details pertaining to shared objects that are referenced by but not changed by a transaction.\nThis information is considered part of the effects, because although the transaction specifies\nthe shared object as input, consensus must schedule it and pick the version that is actually\nused.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "SharedObjectRead",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SharedObjectDelete",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SharedObjectCancelled",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "UnchangedSharedObjectConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "UnchangedSharedObjectEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "UNION",
                    "name": "UnchangedSharedObject",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UnchangedSharedObjectEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "UnchangedSharedObject",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpgradeTransaction",
        "description": "Upgrades a Move Package.",
        "fields": [
          {
            "name": "modules",
            "description": "Bytecode for the modules to be published, BCS serialized and Base64 encoded.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Base64",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dependencies",
            "description": "IDs of the transitive dependencies of the package to be published.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SuiAddress",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "currentPackage",
            "description": "ID of the package being upgraded.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "upgradeTicket",
            "description": "The `UpgradeTicket` authorizing the upgrade.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "UNION",
                "name": "TransactionArgument",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Validator",
        "description": null,
        "fields": [
          {
            "name": "address",
            "description": "The validator's address.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "credentials",
            "description": "Validator's set of credentials such as public keys, network addresses and others.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ValidatorCredentials",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nextEpochCredentials",
            "description": "Validator's set of credentials for the next epoch.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ValidatorCredentials",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Validator's name.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": "Validator's description.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "imageUrl",
            "description": "Validator's url containing their custom image.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "projectUrl",
            "description": "Validator's homepage URL.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operationCap",
            "description": "The validator's current valid `Cap` object. Validators can delegate\nthe operation ability to another address. The address holding this `Cap` object\ncan then update the reference gas price and tallying rule on behalf of the validator.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveObject",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakingPool",
            "description": "The validator's current staking pool object, used to track the amount of stake\nand to compound staking rewards.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveObject",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "The staking pool is a wrapped object. Access its fields directly on the `Validator` type."
          },
          {
            "name": "stakingPoolId",
            "description": "The ID of this validator's `0x3::staking_pool::StakingPool`.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "SuiAddress",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "exchangeRates",
            "description": "The validator's current exchange object. The exchange rate is used to determine\nthe amount of SUI tokens that each past SUI staker can withdraw in the future.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "MoveObject",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "The exchange object is a wrapped object. Access its dynamic fields through the `exchangeRatesTable` query."
          },
          {
            "name": "exchangeRatesTable",
            "description": "A wrapped object containing the validator's exchange rates. This is a table from epoch\nnumber to `PoolTokenExchangeRate` value. The exchange rate is used to determine the amount\nof SUI tokens that each past SUI staker can withdraw in the future.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Owner",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "exchangeRatesSize",
            "description": "Number of exchange rates in the table.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakingPoolActivationEpoch",
            "description": "The epoch at which this pool became active.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakingPoolSuiBalance",
            "description": "The total number of SUI tokens in this pool.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rewardsPool",
            "description": "The epoch stake rewards will be added here at the end of each epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "poolTokenBalance",
            "description": "Total number of pool tokens issued by the pool.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pendingStake",
            "description": "Pending stake amount for this epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pendingTotalSuiWithdraw",
            "description": "Pending stake withdrawn during the current epoch, emptied at epoch boundaries.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pendingPoolTokenWithdraw",
            "description": "Pending pool token withdrawn during the current epoch, emptied at epoch boundaries.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "votingPower",
            "description": "The voting power of this validator in basis points (e.g., 100 = 1% voting power).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gasPrice",
            "description": "The reference gas price for this epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "commissionRate",
            "description": "The fee charged by the validator for staking services.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nextEpochStake",
            "description": "The total number of SUI tokens in this pool plus\nthe pending stake amount for this epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nextEpochGasPrice",
            "description": "The validator's gas price quote for the next epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nextEpochCommissionRate",
            "description": "The proposed next epoch fee for the validator's staking services.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "atRisk",
            "description": "The number of epochs for which this validator has been below the\nlow stake threshold.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UInt53",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "reportRecords",
            "description": "The addresses of other validators this validator has reported.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AddressConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "apy",
            "description": "The APY of this validator in basis points.\nTo get the APY in percentage, divide by 100.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ValidatorConnection",
        "description": null,
        "fields": [
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ValidatorEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nodes",
            "description": "A list of nodes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Validator",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ValidatorCredentials",
        "description": "The credentials related fields associated with a validator.",
        "fields": [
          {
            "name": "protocolPubKey",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "networkPubKey",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "workerPubKey",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "proofOfPossession",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Base64",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "netAddress",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "p2PAddress",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "primaryAddress",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "workerAddress",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ValidatorEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Validator",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "A cursor for use in pagination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ValidatorSet",
        "description": "Representation of `0x3::validator_set::ValidatorSet`.",
        "fields": [
          {
            "name": "totalStake",
            "description": "Total amount of stake for all active validators at the beginning of the epoch.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "BigInt",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pendingRemovals",
            "description": "Validators that are pending removal from the active validator set, expressed as indices in\nto `activeValidators`.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pendingActiveValidatorsId",
            "description": "Object ID of the wrapped object `TableVec` storing the pending active validators.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pendingActiveValidatorsSize",
            "description": "Size of the pending active validators table.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakingPoolMappingsId",
            "description": "Object ID of the `Table` storing the mapping from staking pool ids to the addresses\nof the corresponding validators. This is needed because a validator's address\ncan potentially change but the object ID of its pool will not.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stakingPoolMappingsSize",
            "description": "Size of the stake pool mappings `Table`.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inactivePoolsId",
            "description": "Object ID of the `Table` storing the inactive staking pools.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inactivePoolsSize",
            "description": "Size of the inactive pools `Table`.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validatorCandidatesId",
            "description": "Object ID of the `Table` storing the validator candidates.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "SuiAddress",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validatorCandidatesSize",
            "description": "Size of the validator candidates `Table`.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "activeValidators",
            "description": "The current set of active validators.",
            "args": [
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ValidatorConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ZkLoginIntentScope",
        "description": "An enum that specifies the intent scope to be used to parse the bytes for signature\nverification.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "TRANSACTION_DATA",
            "description": "Indicates that the bytes are to be parsed as transaction data bytes.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PERSONAL_MESSAGE",
            "description": "Indicates that the bytes are to be parsed as a personal message.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ZkLoginVerifyResult",
        "description": "The result of the zkLogin signature verification.",
        "fields": [
          {
            "name": "success",
            "description": "The boolean result of the verification. If true, errors should be empty.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "errors",
            "description": "The errors field captures any verification error",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Directive",
        "description": "A Directive provides a way to describe alternate runtime execution and type\nvalidation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution\nbehavior in ways field arguments will not suffice, such as conditionally\nincluding or skipping a field. Directives provide this by describing\nadditional information to the executor.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "locations",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isRepeatable",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__DirectiveLocation",
        "description": "A Directive can be adjacent to many parts of the GraphQL language, a\n__DirectiveLocation describes one such possible adjacencies.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "QUERY",
            "description": "Location adjacent to a query operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MUTATION",
            "description": "Location adjacent to a mutation operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBSCRIPTION",
            "description": "Location adjacent to a subscription operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD",
            "description": "Location adjacent to a field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_DEFINITION",
            "description": "Location adjacent to a fragment definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_SPREAD",
            "description": "Location adjacent to a fragment spread.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INLINE_FRAGMENT",
            "description": "Location adjacent to an inline fragment.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "VARIABLE_DEFINITION",
            "description": "Location adjacent to a variable definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCHEMA",
            "description": "Location adjacent to a schema definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCALAR",
            "description": "Location adjacent to a scalar definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Location adjacent to an object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD_DEFINITION",
            "description": "Location adjacent to a field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ARGUMENT_DEFINITION",
            "description": "Location adjacent to an argument definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Location adjacent to an interface definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Location adjacent to a union definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Location adjacent to an enum definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM_VALUE",
            "description": "Location adjacent to an enum value definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Location adjacent to an input object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_FIELD_DEFINITION",
            "description": "Location adjacent to an input object field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__EnumValue",
        "description": "One possible value for a given Enum. Enum values are unique values, not a\nplaceholder for a string or numeric value. However an Enum value is returned\nin a JSON response as a string.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Field",
        "description": "Object and Interface types are described by a list of Fields, each of which\nhas a name, potentially a list of arguments, and a return type.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__InputValue",
        "description": "Arguments provided to Fields or Directives and the input fields of an\nInputObject are represented as Input Values which describe their type and\noptionally a default value.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultValue",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Schema",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes\nall available types and directives on the server, as well as the entry\npoints for query, mutation, and subscription operations.",
        "fields": [
          {
            "name": "types",
            "description": "A list of all types supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "queryType",
            "description": "The type that query operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutationType",
            "description": "If this server supports mutation, the type that mutation operations will\nbe rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "subscriptionType",
            "description": "If this server support subscription, the type that subscription\noperations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directives",
            "description": "A list of all directives supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Directive",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Type",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds\nof types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about\nthat type. Scalar types provide no information beyond a name and\ndescription, while Enum types provide their values. Object and Interface\ntypes provide the fields they describe. Abstract types, Union and Interface,\nprovide the Object types possible at runtime. List and NonNull types compose\nother types.",
        "fields": [
          {
            "name": "kind",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "__TypeKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Field",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interfaces",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possibleTypes",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enumValues",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__EnumValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputFields",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ofType",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specifiedByURL",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isOneOf",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__TypeKind",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCALAR",
            "description": "Indicates this type is a scalar.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Indicates this type is an object. `fields` and `interfaces` are valid\nfields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Indicates this type is an interface. `fields` and `possibleTypes` are\nvalid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Indicates this type is an enum. `enumValues` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Indicates this type is an input object. `inputFields` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "LIST",
            "description": "Indicates this type is a list. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NON_NULL",
            "description": "Indicates this type is a non-null. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      }
    ],
    "directives": [
      {
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Included when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Skipped when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      }
    ]
  }
}
